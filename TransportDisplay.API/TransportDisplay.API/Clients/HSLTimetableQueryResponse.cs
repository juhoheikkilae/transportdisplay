// Generated by https://quicktype.io

namespace TransportDisplay.API.Clients.Responses
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class HslTimetableQueryResponse
    {
        [JsonProperty("data")]
        public Data Data { get; set; }
    }

    public partial class Data
    {
        [JsonProperty("stop")]
        public Stop Stop { get; set; }
    }

    public partial class Stop
    {
        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("stoptimesWithoutPatterns")]
        public StoptimesWithoutPattern[] StoptimesWithoutPatterns { get; set; }
    }

    public partial class StoptimesWithoutPattern
    {
        [JsonProperty("scheduledArrival")]
        public long ScheduledArrival { get; set; }

        [JsonProperty("realtimeArrival")]
        public long RealtimeArrival { get; set; }

        [JsonProperty("arrivalDelay")]
        public long ArrivalDelay { get; set; }

        [JsonProperty("scheduledDeparture")]
        public long ScheduledDeparture { get; set; }

        [JsonProperty("realtimeDeparture")]
        public long RealtimeDeparture { get; set; }

        [JsonProperty("departureDelay")]
        public long DepartureDelay { get; set; }

        [JsonProperty("realtime")]
        public bool Realtime { get; set; }

        [JsonProperty("realtimeState")]
        public string RealtimeState { get; set; }

        [JsonProperty("serviceDay")]
        public long ServiceDay { get; set; }

        [JsonProperty("headsign")]
        public string Headsign { get; set; }

        [JsonProperty("trip")]
        public Trip Trip { get; set; }
    }

    public partial class Trip
    {
        [JsonProperty("routeShortName")]
        public string RouteShortName { get; set; }
    }

    public partial class HslTimetableQueryResponse
    {
        public static HslTimetableQueryResponse FromJson(string json) => JsonConvert.DeserializeObject<HslTimetableQueryResponse>(json, TransportDisplay.API.Clients.Responses.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this HslTimetableQueryResponse self) => JsonConvert.SerializeObject(self, TransportDisplay.API.Clients.Responses.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters = {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
